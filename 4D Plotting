#########################################
# Create RFM Segmentation Visualization
# ---------------------------------
# Started by  : Adam Nguyen
# Updated by  : Adam Nguyen
# Created at  : 11/27/2013
# Updated at  : xx/xx/xxxx
# Description : RFM Analysis
#########################################

#Clear Environment
rm(list = ls(all = TRUE))

#Names of working directory and files
myfolder <- "C:/Users/adam.nguyen/Desktop/Useful R/"
#Set Directory
setInternet2(TRUE)
Sys.setenv(TZ='UTC')
Sys.time()
setwd(myfolder)
getwd()
source(paste(c(myfolder,"library.forecast.txt"),collapse="")) #Get library

#Create SQL Query
query <- #Enter SQL Query Here

#Establish Connection
library(RODBC)
library(rgl)
dc <- odbcConnect(dsn="RSQL")
data <- sqlQuery(dc, query)
str(data)
head(data)

##Simulate Data
rm(data)
data <- as.data.frame(cbind(rnorm(1000,1,1), round(runif(1000,1,100),0), rpois(1000,30)
	, round(runif(1000,1,50),0), round(runif(1000,1,24),0), round(runif(1000,1,24),0)*rpois(1000,10)
	, round(runif(1000,1,100),0))
)
colnames(data)	<- c("P_Purchase_Rate", "O_Order_Frequency", "C_CPA"
	, "POC_Segment", "CPC", "Rec_CPC", "POC_Score")

#Random string generator
MHmakeRandomString <- function(n=1, lenght=12)
{
    randomString <- c(1:n)                  # initialize vector
    for (i in 1:n)
    {
        randomString[i] <- paste(sample(c(0:9, letters, LETTERS),
                                 lenght, replace=TRUE),
                                 collapse="")
    }
    return(randomString)
}

data$campaign_name <- MHmakeRandomString(1000,5)

head(data)
str(data)

#Define parameters for 3D object
library(rgl)
names <- paste(data[,"campaign_name"] , data[,"POC_Segment"], paste0("CPC:",data[,"CPC"]), sep=" - ")
names2 <- paste(data[,"campaign_name"] , data[,"POC_Segment"], paste0("CPC:",data[,"Rec_CPC"]), sep=" - ")
head(names)
P <- data[,"P_Purchase_Rate"]
O <- data[,"O_Order_Frequency"]
C <- data[,"C_CPA"]

##Formatting 3D object rendition

#Create frame for RFM plotting
plot3d(P, O, C, col="black"
	, size=1, type="n", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="RFM Cube"
	,xlab="R_Recency", ylab="F_Frequency", zlab="M_Monetary")
axes3d(edges = "bbox", col="black", lwd=2, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)

#Add Display Ads into Plot
plot3d(P, O, C, col="black"
	, size=1, type="s", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="Display Ads Plot"
	,xlab="P_Purchase_Rate", ylab="O_Order_Frequency", zlab="C_CPA")
axes3d(edges = "bbox", col="black", lwd=2, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)

#Define color hue
hue <- data[,"POC_Score"]/max(data[,"POC_Score"])

#Add CPC Allocation for CPA Targeting
plot3d(P, O, C, col=hsv(1,hue,.8)#col=heat.colors(c(data[,"CPC"]))
	, size=c(data[,"CPC"]/3.5), type="s", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="CPA-based Targeting"
	,xlab="P_Purchase_Rate", ylab="O_Order_Frequency", zlab="C_CPA")
axes3d(edges = "bbox", col="black", lwd=2, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)
identify3d(P, O, C, labels = names, n = length(names), plot = TRUE, tolerance = 20, buttons = c("right", "middle"))

#Add CPC Allocation for POC Segmentation Targeting
open3d()
plot3d(P, O, C, col=hsv(1,hue,.8)#col=heat.colors(c(data[,"Rec_CPC"]))
	, size=c(data[,"CPC"]/3.5), type="s", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="POC Segmentation"
	,xlab="P_Purchase_Rate", ylab="O_Order_Frequency", zlab="C_CPA")
axes3d(edges = "bbox", col="black", lwd=2, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)
#grid3d(c("x+", "y+", "z+"), col="black", lwd=2, n=3)
#grid3d(c("x-", "y-", "z-"), col="black", lwd=2, n=3)
identify3d(P, O, C, labels = names2, n = length(names), plot = TRUE, tolerance = 20
		, buttons = c("right", "middle"))

#Add legend for color
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
    scale = (length(lut)-1)/(max-min)
 
    dev.new(width=1.75, height=5)
    plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
    axis(2, ticks, las=1)
    for (i in 1:(length(lut)-1)) {
    	y = (i-1)/scale + min
    	rect(0,y,10,y+1/scale, col=lut[i], border=NA)
    }	
}
color.bar(hsv(1,sort(hue),., 0, 1, nticks=11))

##Test
open3d()
hue <- c(data[,"POC_Score"])/max(c(data[,"POC_Score"]))
(1,1,1)
plot3d(P, O, C, col=hsv(.65+.35*hue,hue,1)#col=?heat.map(c(data[,"POC_Score"]))
	, size=c(data[,"CPC"]/3.5), type="s", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="POC Segmentation"
	,xlab="P_Purchase_Rate", ylab="O_Order_Frequency", zlab="C_CPA")
axes3d(edges = "bbox", col="orange", lwd=3, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)
grid3d(c("x+", "y+", "z+"), col="orange", lwd=3, n=5)
grid3d(c("x-", "y-", "z-"), col="orange", lwd=3, n=5)
bg3d("white")
rgl.bg(sphere=TRUE, color=c("black","green", "white"), lwd=2, front="lines", back="lines")
rgl.bg(sphere=FALSE, color=c("white","black"), lwd=2, front="lines", back="lines" )
rgl.material(color="black", smooth="TRUE", front="fill", back="fill", )

##Rotating Cube
plot3d(P, O, C, col=hsv(.65+.35*hue,hue,1)
	, size=c(data[,"Rec_CPC"]/3.5), type="s", nticks = 1
	, lwd=2, box=TRUE, axes=TRUE, main="POC Segmentation"
	,xlab="P_Purchase_Rate", ylab="O_Order_Frequency", zlab="C_CPA")
axes3d(edges = "bbox", col="green", lwd=3, labels = TRUE, tick = TRUE, nticks = 10, box=TRUE)
grid3d(c("x+", "y+", "z+"), col="green", lwd=3, n=4)
grid3d(c("x-", "y-", "z-"), col="green", lwd=3, n=4)
rgl.bg(sphere=TRUE, texture=system.file("textures/refmap.png", package="rgl"), back="filled")

#bg3d("black")
M <- par3d("userMatrix") 
st<-function(n,t) { 
	for (i in 1:n) { 
		play3d( par3dinterp( userMatrix=list(M,rotate3d(M, pi, 1, 0, 0) ) ), duration=t ) 
		play3d( par3dinterp( userMatrix=list(M,rotate3d(M, pi, 0, 1, 0) ) ), duration=t) 
		play3d( par3dinterp( userMatrix=list(M,rotate3d(M, pi, 0, 0, 1) ) ), duration=t) 
		play3d( par3dinterp( userMatrix=list(M,rotate3d(M, pi, 1, 1, 1) ) ), duration=t) 
		} 
	}
st(20,2)
